<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">



    <!--
    spring bean 등록하기
    bean 태그를 이용해서 등록
    id : bean 을 구분하느 ㄴ이름
    class : spring bean 으로 등록할 클래스, 패키지명  ,클래스명 으로 작성
    -->


    <!--기본생성자로 클래스를 생성 설정 - > 기본생성자가 있어야 한다.-->
    <bean id="animal" class="com.bs.spring.test.model.dto.Animal"></bean>

    <!--매개변수 한개짜리 이용해서 써라.-->
    <bean id="animal2" class="com.bs.spring.test.model.dto.Animal">
        <constructor-arg index="0" value="설기"/>
        <constructor-arg index="1" value="1"/>
        <constructor-arg index="2" value="남"/>
        <constructor-arg index="3" value="3.12"/>   <!--타입을 보고서 알아서 형변환해서 준다-->
    </bean>

    <!--setter를 이용해서 springbean의 초기값 세팅하기--> <!--빈이 안올라가면 spring이 오류라서 다른 서블릿은 실행가능. 에러가 별개로 적용됨.-->
    <bean id="animal3" class="com.bs.spring.test.model.dto.Animal">
        <property name="name" value="도토리사망"/>
    </bean>


    <!--
        다른 객체를 의존하고 있을때 spring bean 등록하기
        spring bean으로 등록할 클래스의 필드에 다른 클래스가 있을때
        ref 속성을 이용해서 다른 spring bean을 참조함
    -->

    <!--객체 참조라서 ref를 사용해야함. aniaml이 스프링 빈으로 등록되어있어야 한다.( 위에 선언한 것중 하나 넣는것. 빈 구별하는 것 )-->
    <bean id="person" class="com.bs.spring.test.model.dto.Person">
        <property name="animal" ref="animal2"/>  <!--animal 필드에 animal2를 집어넣는다.-->
    </bean>


    <bean id="person1" class="com.bs.spring.test.model.dto.Person">
        <constructor-arg index="0" value="유병승"/>
        <constructor-arg index="1" value="19"/>
        <constructor-arg index="2" value="경기도 시흥시"/>
        <constructor-arg index="3" ref="animal3"/>
    </bean>

    <!--
        spring bean을 생성, 소멸할때 특정 로직을 실행하기.
        생성 : init-method속성을 이용해서 설정
        소멸 : destroy-method속성을 이용해서 설정

    -->
    <bean id="animal4" class="com.bs.spring.test.model.dto.Animal"
    init-method="initTest" destroy-method="destroyTest">

        <property name="name" value="뽀삐"/>
        <property name="age" value="1"/>
        <property name="gender" value="여"/>
        <property name="weight" value="4.3"/>
    </bean>


<!--어노테이션으로 등록된 spring bean 찾기
    <context:component-scan> 태그를 이용 -> 검색하는 기준을 설정
    basepackage="기준패키지"

    별도의 설정 파일이 필요하다.
    맨위에
    1. xmlns:context="http://www.springframework.org/schema/context" 추가
    2. schemaLocation "http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd" 추가
-->

    <!--com.bs.spring 패키지 내부에 있는 모든 클래스 검색.-->
    <context:component-scan base-package="com.bs.spring"/>


    <!--
        mvc 모듈에서 @Controller 기능수행하기.
        <mvc:annotaion-driven/>태그를 이용해서 controller 활성화  + 프리픽스 해야함
        1. xmlns:mvc="http://www.springframework.org/schema/mvc" 추가
        2. schemaLocation http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd" 추가
    -->

    <mvc:annotation-driven/>

    <!--web mvc 설정하기 -->
    <!--resource 설정하기 -->
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <!--
        기본 viewresolver 등록하기
        클라이언트에게 응답을 처리하는 객체를 말한다.
        jsp로 응답하는 viewresolver등록하기
    -->

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="suffix" value=".jsp"/>
        <property name="prefix" value="/WEB-INF/views/"/>

        <!--파일 [/WEB-INF/views/test/beantest.jsp]을(를) 찾을 수 없습니다. 로 jsp를 찾는 기본설정을 함.-->
    </bean>
</beans>